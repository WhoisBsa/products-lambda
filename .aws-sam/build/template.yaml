AWSTemplateFormatVersion: 2010-09-09
Description: tutorial-products
Transform:
- AWS::Serverless-2016-10-31
Resources:
  ListProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/list-products.handler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: tutorial-products
      Environment:
        Variables:
          TABLE_NAME: tutorial-products
      Events:
        Api:
          Type: Api
          Properties:
            Method: GET
            Path: /products
      CodeUri: ListProductsFunction
    Metadata:
      SamResourceId: ListProductsFunction
  CreateProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create-product.handler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: tutorial-products
      Environment:
        Variables:
          TABLE_NAME: tutorial-products
      Events:
        Api:
          Type: Api
          Properties:
            Method: POST
            Path: /products
      CodeUri: CreateProductFunction
    Metadata:
      SamResourceId: CreateProductFunction
  DeleteProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/delete-product.handler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: tutorial-products
      Environment:
        Variables:
          TABLE_NAME: tutorial-products
      Events:
        Api:
          Type: Api
          Properties:
            Method: DELETE
            Path: /products/{id}
      CodeUri: DeleteProductFunction
    Metadata:
      SamResourceId: DeleteProductFunction
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
      CodeUri: getAllItemsFunction
    Metadata:
      SamResourceId: getAllItemsFunction
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET
      CodeUri: getByIdFunction
    Metadata:
      SamResourceId: getByIdFunction
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
      CodeUri: putItemFunction
    Metadata:
      SamResourceId: putItemFunction
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
